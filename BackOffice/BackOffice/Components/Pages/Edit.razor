@page "/user/edit/{id}"
@rendermode InteractiveServer
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Edit User</h3>
@if (user == null)
{
    <p>Loading... </p>
}
else
{
    <div>
        <label>First name</label>
         <p> @user.id </p>
         <input @bind="user.FirstName" placeholder="First Name" />
        <input @bind="user.LastName" placeholder="Last Name" />
    </div>
    <button @onclick="UpdateUser">Save Changes</button>
    <button @onclick="DeleteUser"> Delete User</button>

}


@code {
    [Parameter]
    public string id { get; set; }

    private ApplicationUser? user;

    public class ApplicationUser
    {
        public string id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<ApplicationUser>($" http://localhost:7227/api/getUser/{id}");


    }
    private async Task UpdateUser()
    {
        var response = await Http.PutAsJsonAsync($" http://localhost:7227/api/updateUser/{id}", user);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/users");
        }
        else
        {
            Console.WriteLine("Failed to update user");
        }
    }
    private async Task DeleteUser()
    {
        var response = await Http.DeleteAsync($"http://localhost:7227/api/deleteUser/{id}");
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/users");
        }
        else
        {
            Console.WriteLine("Failed to delete user");
        }
    }
}
